[{"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\index.js":"1","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\appHeader\\AppHeader.js":"2","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoList\\TodoList.js":"3","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoListItem\\TodoListItem.js":"4","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\itemAddForm\\ItemAddForm.js":"5","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\appHeader\\index.js":"6","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\itemAddForm\\index.js":"7","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoList\\index.js":"8","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\app\\index.js":"9","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\app\\App.js":"10","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\services\\TodoService.js":"11"},{"size":154,"mtime":1610538384584,"results":"12","hashOfConfig":"13"},{"size":292,"mtime":1610534421503,"results":"14","hashOfConfig":"13"},{"size":2022,"mtime":1610703549814,"results":"15","hashOfConfig":"13"},{"size":1801,"mtime":1610619467240,"results":"16","hashOfConfig":"13"},{"size":797,"mtime":1610622173269,"results":"17","hashOfConfig":"13"},{"size":63,"mtime":1610537663736,"results":"18","hashOfConfig":"13"},{"size":69,"mtime":1610537790215,"results":"19","hashOfConfig":"13"},{"size":60,"mtime":1610537849045,"results":"20","hashOfConfig":"13"},{"size":45,"mtime":1610538447733,"results":"21","hashOfConfig":"13"},{"size":5324,"mtime":1610703948544,"results":"22","hashOfConfig":"13"},{"size":576,"mtime":1610712877289,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1g2pnhg",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\index.js",[],["49","50"],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\appHeader\\AppHeader.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoList\\TodoList.js",["51"],"import React, { useState } from 'react'\r\nimport TodoListItem from '../todoListItem/TodoListItem'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport './TodoList.css'\r\n\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone, onEdit, handleOnDragEnd }) => {\r\n    // const [characters, updateCharacters] = useState(todos);\r\n    // function handleOnDragEnd(result) {\r\n    //     if (!result.destination) return;\r\n    //     const items = Array.from(todos);\r\n    //     const [reorderedItem] = items.splice(result.source.index, 1);\r\n    //     items.splice(result.destination.index, 0, reorderedItem);\r\n    //     // updateCharacters(items);\r\n    // }\r\n    const elements = todos.map((item, index) => {\r\n        const { id, ...itemProps } = item\r\n\r\n        return (\r\n            <Draggable key={id} draggableId={String(id)} index={index}>\r\n                {(provided) => (\r\n                    <li className=\"list-group-item\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <TodoListItem\r\n                            {...itemProps}\r\n                            onDeleted={() => onDeleted(id)}\r\n                            onToggleImportant={() => { onToggleImportant(id) }}\r\n                            onToggleDone={() => { onToggleDone(id) }}\r\n                            onEdit={() => { onEdit(id) }}\r\n                        />\r\n                    </li>\r\n                )}\r\n            </Draggable>\r\n\r\n        )\r\n    })\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"characters\">\r\n                {(provided) => (\r\n                    <ul className=\"list-group todo-list\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {elements}\r\n                        {provided.placeholder}\r\n                    </ul>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n\r\n}\r\nexport default TodoList","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoListItem\\TodoListItem.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\itemAddForm\\ItemAddForm.js",["52","53"],"import React, { Component } from 'react'\r\nimport './ItemAddForm.css'\r\n\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    render() {\r\n\r\n        const { addItem, valueForm, onLabelChangeNew, onSubmit } = this.props\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                onSubmit={onSubmit}>\r\n                <input type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={this.onLabelChange}\r\n                    onChange={onLabelChangeNew}\r\n                    placeholder=\"What needs to be done\"\r\n                    value={valueForm} />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\appHeader\\index.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\itemAddForm\\index.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\todoList\\index.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\app\\index.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\components\\app\\App.js",[],"C:\\Users\\андрей\\Desktop\\ToDoTest\\ToDoTest\\todo-test\\src\\services\\TodoService.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":9,"column":17,"nodeType":"60","messageId":"61","endLine":9,"endColumn":24},{"ruleId":"63","severity":1,"message":"64","line":16,"column":21,"nodeType":"65","endLine":16,"endColumn":48},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'addItem' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]